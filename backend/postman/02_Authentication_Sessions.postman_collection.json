{
  "info": {
    "name": "üîê Autentica√ß√£o JWT",
    "description": "Endpoints de autentica√ß√£o, login, logout e gerenciamento de tokens JWT da API Azore Blockchain",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "{{base_url}}",
      "type": "string"
    },
    {
      "key": "email",
      "value": "{{email}}",
      "type": "string"
    },
    {
      "key": "password",
      "value": "{{password}}",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "{{access_token}}",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "{{refresh_token}}",
      "type": "string"
    },
    {
      "key": "api_key_name",
      "value": "{{api_key_name}}",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üìù User Register",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Jo√£o da Silva\",\n  \"email\": \"joao@exemplo.com\",\n  \"password\": \"MinhaSenh@123\",\n  \"confirmPassword\": \"MinhaSenh@123\",\n  \"companyAlias\": \"default\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/register",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "register"]
        },
        "description": "Registra um novo usu√°rio no sistema"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"User created successfully\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('success');",
              "    pm.expect(response.success).to.be.true;",
              "    pm.expect(response.data).to.have.property('user');",
              "    pm.expect(response.data.user).to.have.property('email');",
              "});",
              "",
              "pm.test(\"User starts inactive (needs email confirmation)\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response.data.user.isActive).to.be.false;",
              "});",
              "",
              "console.log('‚úÖ User Registered - Email:', pm.response.json().data?.user?.email);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "üîì User Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/login",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "login"]
        },
        "description": "Autentica usu√°rio e retorna JWT tokens"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Login successful\", function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('success');",
              "    pm.expect(response.success).to.be.true;",
              "    pm.expect(response.data).to.have.property('accessToken');",
              "    pm.expect(response.data).to.have.property('refreshToken');",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.accessToken) {",
              "        pm.environment.set(\"access_token\", response.data.accessToken);",
              "        pm.environment.set(\"refresh_token\", response.data.refreshToken);",
              "        console.log(\"‚úÖ JWT tokens saved to environment\");",
              "        console.log(\"‚úÖ User:\", response.data.user?.name);",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "üö™ User Logout",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/auth/logout",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "logout"]
        }
      },
      "response": []
    },
    {
      "name": "üë§ Get Current User",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/auth/me",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "me"]
        }
      },
      "response": []
    },
    {
      "name": "üîÑ Refresh JWT Token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/refresh",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "refresh"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.accessToken) {",
              "        pm.environment.set(\"access_token\", response.data.accessToken);",
              "        console.log(\"New access token saved to environment\");",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "üîë Change Password",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"currentPassword\": \"{{password}}\",\n  \"newPassword\": \"novaSenha123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/change-password",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "change-password"]
        }
      },
      "response": []
    },
    {
      "name": "üîê Generate API Key",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{api_key_name}}\",\n  \"description\": \"API Key para desenvolvimento\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/generate-api-key",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "generate-api-key"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    if (response.data && response.data.apiKey) {",
              "        pm.environment.set(\"api_key\", response.data.apiKey);",
              "        console.log(\"API Key saved to environment\");",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "üìã List API Keys",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/auth/api-keys",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "api-keys"]
        }
      },
      "response": []
    },
    {
      "name": "‚ùå Revoke API Key",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/auth/api-keys/{{api_key_id}}/revoke",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "api-keys", "{{api_key_id}}", "revoke"]
        }
      },
      "response": []
    },
    {
      "name": "‚úèÔ∏è Edit API Key",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{api_key_name}} Atualizada\",\n  \"description\": \"API Key atualizada para desenvolvimento\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/api-keys/{{api_key_id}}/edit",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "api-keys", "{{api_key_id}}", "edit"]
        }
      },
      "response": []
    }
  ]
} 