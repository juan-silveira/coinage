name: coinage

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: coinage_postgres
    environment:
      POSTGRES_DB: coinage_db
      POSTGRES_USER: coinage_user
      POSTGRES_PASSWORD: coinage_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - azore_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coinage_user -d coinage_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: coinage_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: azore
      RABBITMQ_DEFAULT_PASS: azore123
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - azore_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: coinage_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - azore_network
    restart: unless-stopped
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis (para blacklist de tokens JWT)
  redis:
    image: redis:7-alpine
    container_name: coinage_redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - azore_network
    restart: unless-stopped
    command: redis-server --appendonly yes --bind 0.0.0.0
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação Node.js
  api:
    build: .
    container_name: coinage_backend
    environment:
      NODE_ENV: development
      PORT: 8800
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: coinage_db
      DB_USER: coinage_user
      DB_PASSWORD: coinage_password
      DB_DIALECT: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: azore
      RABBITMQ_PASS: azore123
      RABBITMQ_VHOST: /
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: azore-documents
      JWT_SECRET: azore-jwt-secret-key-change-in-production
      JWT_REFRESH_SECRET: azore-refresh-secret-key-change-in-production
      JWT_ACCESS_EXPIRY: 15m
      JWT_REFRESH_EXPIRY: 7d
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 
      REDIS_DB: 0
      MAINNET_RPC_URL: https://rpc-mainnet.azore.technology
      MAINNET_CHAIN_ID: 8800
      TESTNET_RPC_URL: https://rpc-testnet.azore.technology
      TESTNET_CHAIN_ID: 88001
      DEFAULT_NETWORK: ${DEFAULT_NETWORK}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      ADMIN_PRIVATE_KEY: ${ADMIN_PRIVATE_KEY}
      TEST_ADDRESS: 0x742d35Cc6634C0532925a3b8D4C9db96C4b4d8b6
      DEFAULT_ADMIN_EMAIL: ivan.alberton@navi.inf.br
      DEFAULT_ADMIN_PASSWORD: N@vi@2025
      DEFAULT_ADMIN_NAME: Ivan Alberton
      DEFAULT_ADMIN_CPF: 02308739959
      DEFAULT_ADMIN_PHONE: 46999716711
      DEFAULT_ADMIN_BIRTH_DATE: "1979-07-26"
      DEFAULT_ADMIN_PUBLIC_KEY: 0x5528C065931f523CA9F3a6e49a911896fb1D2e6f
      DEFAULT_ADMIN_PRIVATE_KEY: 0x2a09b1aaa664113fd7163a0a4aafbcb16f6b5a16ae9dacfe7c840be2455e3f61
      DATABASE_URL: postgresql://coinage_user:coinage_password@postgres:5432/coinage_db
    ports:
      - "8800:8800"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - azore_network
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  azore_network:
    driver: bridge 